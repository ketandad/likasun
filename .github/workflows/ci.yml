name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: pip install ruff
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: ruff check .
      - run: npm run format:check

  api-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: raybeam
          POSTGRES_PASSWORD: raybeam
          POSTGRES_DB: raybeam
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U raybeam -d raybeam" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql+psycopg2://raybeam:raybeam@localhost:5432/raybeam
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: apps/api/requirements.txt
      - run: pip install -r apps/api/requirements.txt
      - run: pip install pytest
      - name: Run migrations
        run: alembic -c apps/api/alembic.ini upgrade head
      - name: Run tests
        run: |
          pytest -q --junitxml=test-results/pytest.xml
      - name: Upload JUnit
        uses: actions/upload-artifact@v4
        with:
          name: api-tests-junit
          path: test-results/pytest.xml

  web-e2e:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.47.0-jammy
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: Install deps
        working-directory: apps/web
        run: npm ci
      - name: Build and start app
        working-directory: apps/web
        run: |
          npm run build
          npm run start &
      - name: Run Playwright tests
        working-directory: apps/web
        env:
          PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
        run: npm run test:ci
